{"ast":null,"code":"// src/api.js\nexport const fetchUsers = async () => {\n  try {\n    const response = await fetch('http://localhost/login/api.php'); // URL da sua API\n    if (!response.ok) {\n      throw new Error('Network response was not ok');\n    }\n    const data = await response.json();\n    return Array.isArray(data) ? data : []; // Garantir que sempre retorne um array\n  } catch (error) {\n    console.error('There has been a problem with your fetch operation:', error);\n    return []; // Retornar um array vazio em caso de erro\n  }\n};","map":{"version":3,"names":["fetchUsers","response","fetch","ok","Error","data","json","Array","isArray","error","console"],"sources":["C:/Users/BHC/Desktop/Projetos/Login/login/src/Api.js"],"sourcesContent":["// src/api.js\r\nexport const fetchUsers = async () => {\r\n    try {\r\n        const response = await fetch('http://localhost/login/api.php'); // URL da sua API\r\n        if (!response.ok) {\r\n            throw new Error('Network response was not ok');\r\n        }\r\n        const data = await response.json();\r\n        return Array.isArray(data) ? data : []; // Garantir que sempre retorne um array\r\n    } catch (error) {\r\n        console.error('There has been a problem with your fetch operation:', error);\r\n        return []; // Retornar um array vazio em caso de erro\r\n    }\r\n};\r\n"],"mappings":"AAAA;AACA,OAAO,MAAMA,UAAU,GAAG,MAAAA,CAAA,KAAY;EAClC,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,gCAAgC,CAAC,CAAC,CAAC;IAChE,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;MACd,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;IAClD;IACA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;IAClC,OAAOC,KAAK,CAACC,OAAO,CAACH,IAAI,CAAC,GAAGA,IAAI,GAAG,EAAE,CAAC,CAAC;EAC5C,CAAC,CAAC,OAAOI,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,qDAAqD,EAAEA,KAAK,CAAC;IAC3E,OAAO,EAAE,CAAC,CAAC;EACf;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}