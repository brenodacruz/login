{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\BHC\\\\Desktop\\\\Projetos\\\\Login\\\\login\\\\src\\\\Components\\\\Register.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport styles from '../Styles/Register.module.css';\nimport Input from './Input';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Register() {\n  _s();\n  const [usuario, setUsuario] = useState('');\n  const [email, setEmail] = useState('');\n  const [senha, setSenha] = useState('');\n  const [confirmarSenha, setConfirmarSenha] = useState('');\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    // Verifica se todos os campos estão preenchidos\n    if (!usuario || !email || !senha || !confirmarSenha) {\n      alert('Todos os campos devem ser preenchidos.');\n      return;\n    }\n\n    // Cria um objeto com os dados do formulário\n    const formData = new FormData();\n    formData.append('usuario', usuario);\n    formData.append('email', email);\n    formData.append('senha', senha);\n    formData.append('confirmarSenha', confirmarSenha);\n    try {\n      // Faz a requisição para o PHP\n      const response = await fetch('http://localhost/login/api.php', {\n        method: 'POST',\n        body: formData\n      });\n\n      // Converte a resposta para JSON\n      const result = await response.json();\n\n      // Se a resposta do PHP indicar um erro, exibe um alerta\n      if (result.error) {\n        alert(result.error);\n      } else {\n        alert('Cadastro realizado com sucesso!');\n        // Limpa os campos do formulário, se necessário\n        setUsuario('');\n        setEmail('');\n        setSenha('');\n        setConfirmarSenha('');\n      }\n    } catch (error) {\n      alert('Ocorreu um erro ao enviar o formulário.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Cadastrar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        name: \"usuario\",\n        type: \"text\",\n        placeholder: \"Usu\\xE1rio\",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        name: \"email\",\n        type: \"text\",\n        placeholder: \"Email\",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        name: \"senha\",\n        type: \"password\",\n        placeholder: \"Senha\",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        name: \"confirmarSenha\",\n        type: \"password\",\n        placeholder: \"Confirmar senha\",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Cadastrar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n}\n_s(Register, \"/EEP7cIYqRJ5Jjgt9tH0/OKpANo=\");\n_c = Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useState","styles","Input","jsxDEV","_jsxDEV","Register","_s","usuario","setUsuario","email","setEmail","senha","setSenha","confirmarSenha","setConfirmarSenha","handleSubmit","event","preventDefault","alert","formData","FormData","append","response","fetch","method","body","result","json","error","className","container","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","name","type","placeholder","onChange","handleChange","_c","$RefreshReg$"],"sources":["C:/Users/BHC/Desktop/Projetos/Login/login/src/Components/Register.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport styles from '../Styles/Register.module.css';\r\nimport Input from './Input';\r\n\r\nexport default function Register() {\r\n    const [usuario, setUsuario] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [senha, setSenha] = useState('');\r\n    const [confirmarSenha, setConfirmarSenha] = useState('');\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n\r\n        // Verifica se todos os campos estão preenchidos\r\n        if (!usuario || !email || !senha || !confirmarSenha) {\r\n            alert('Todos os campos devem ser preenchidos.');\r\n            return;\r\n        }\r\n\r\n        // Cria um objeto com os dados do formulário\r\n        const formData = new FormData();\r\n        formData.append('usuario', usuario);\r\n        formData.append('email', email);\r\n        formData.append('senha', senha);\r\n        formData.append('confirmarSenha', confirmarSenha);\r\n\r\n        try {\r\n            // Faz a requisição para o PHP\r\n            const response = await fetch('http://localhost/login/api.php', {\r\n                method: 'POST',\r\n                body: formData,\r\n            });\r\n\r\n            // Converte a resposta para JSON\r\n            const result = await response.json();\r\n\r\n            // Se a resposta do PHP indicar um erro, exibe um alerta\r\n            if (result.error) {\r\n                alert(result.error);\r\n            } else {\r\n                alert('Cadastro realizado com sucesso!');\r\n                // Limpa os campos do formulário, se necessário\r\n                setUsuario('');\r\n                setEmail('');\r\n                setSenha('');\r\n                setConfirmarSenha('');\r\n            }\r\n        } catch (error) {\r\n            alert('Ocorreu um erro ao enviar o formulário.');\r\n        }\r\n    };\r\n\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            <h1>Cadastrar</h1>\r\n            <form onSubmit={handleSubmit}>\r\n                <Input name=\"usuario\" type=\"text\" placeholder=\"Usuário\" onChange={handleChange} />\r\n                <Input name=\"email\" type=\"text\" placeholder=\"Email\" onChange={handleChange} />\r\n                <Input name=\"senha\" type=\"password\" placeholder=\"Senha\" onChange={handleChange} />\r\n                <Input name=\"confirmarSenha\" type=\"password\" placeholder=\"Confirmar senha\" onChange={handleChange} />\r\n                <button type=\"submit\">Cadastrar</button>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}