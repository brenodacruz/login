{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\BHC\\\\Desktop\\\\Projetos\\\\Login\\\\login\\\\src\\\\Components\\\\Register.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport styles from '../Styles/Register.module.css';\nimport Input from './Input';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Register() {\n  _s();\n  const [formValues, setFormValues] = useState({\n    usuario: '',\n    email: '',\n    senha: '',\n    confirmarSenha: ''\n  });\n  const [message, setMessage] = useState('');\n  const navigate = useNavigate();\n\n  // Função para atualizar os valores do formulário\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setFormValues({\n      ...formValues,\n      [name]: value\n    });\n  };\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const {\n      usuario,\n      email,\n      senha,\n      confirmarSenha\n    } = formValues;\n\n    // Verifica se todos os campos estão preenchidos\n    if (!usuario || !email || !senha || !confirmarSenha) {\n      setMessage('Todos os campos devem ser preenchidos.');\n      return;\n    }\n\n    // Verifica o formato do email\n    if (!/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(email)) {\n      setMessage('O email deve ser válido.');\n      return;\n    }\n\n    // Verifica se as senhas são iguais\n    if (senha !== confirmarSenha) {\n      setMessage('As senhas não coincidem.');\n      return;\n    }\n\n    // Cria um objeto com os dados do formulário\n    const formData = new FormData();\n    formData.append('usuario', usuario);\n    formData.append('email', email);\n    formData.append('senha', senha);\n    formData.append('confirmarSenha', confirmarSenha);\n    try {\n      // Faz a requisição para o PHP\n      const response = await fetch('http://localhost/login/api.php', {\n        method: 'POST',\n        body: formData\n      });\n\n      // Converte a resposta para JSON\n      const result = await response.json();\n\n      // Se a resposta do PHP indicar um erro, exibe a mensagem\n      if (result.error) {\n        setMessage(result.message); // Atualiza o estado com a mensagem de erro\n      } else {\n        setMessage('Cadastro realizado com sucesso!');\n        // Limpa os campos do formulário\n        setFormValues({\n          usuario: '',\n          email: '',\n          senha: '',\n          confirmarSenha: ''\n        });\n        // Navega para a página de login\n        setTimeout(() => navigate('/entrar'), 2000); // Redireciona após 2 segundos para permitir a visualização da mensagem\n      }\n    } catch (error) {\n      setMessage('Ocorreu um erro ao enviar o formulário.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Cadastrar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        name: \"usuario\",\n        type: \"text\",\n        placeholder: \"Usu\\xE1rio\",\n        onChange: handleChange,\n        value: formValues.usuario\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        name: \"email\",\n        type: \"text\",\n        placeholder: \"Email\",\n        onChange: handleChange,\n        value: formValues.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        name: \"senha\",\n        type: \"password\",\n        placeholder: \"Senha\",\n        onChange: handleChange,\n        value: formValues.senha\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        name: \"confirmarSenha\",\n        type: \"password\",\n        placeholder: \"Confirmar senha\",\n        onChange: handleChange,\n        value: formValues.confirmarSenha\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Cadastrar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.message,\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 29\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 9\n  }, this);\n}\n_s(Register, \"wAcjqFtXfZGfdrlWt9GHzW+0M+Q=\", false, function () {\n  return [useNavigate];\n});\n_c = Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useState","styles","Input","useNavigate","jsxDEV","_jsxDEV","Register","_s","formValues","setFormValues","usuario","email","senha","confirmarSenha","message","setMessage","navigate","handleChange","event","name","value","target","handleSubmit","preventDefault","test","formData","FormData","append","response","fetch","method","body","result","json","error","setTimeout","className","container","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","onChange","_c","$RefreshReg$"],"sources":["C:/Users/BHC/Desktop/Projetos/Login/login/src/Components/Register.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport styles from '../Styles/Register.module.css';\r\nimport Input from './Input';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nexport default function Register() {\r\n    const [formValues, setFormValues] = useState({\r\n        usuario: '',\r\n        email: '',\r\n        senha: '',\r\n        confirmarSenha: ''\r\n    });\r\n\r\n    const [message, setMessage] = useState('');\r\n    const navigate = useNavigate();\r\n\r\n    // Função para atualizar os valores do formulário\r\n    const handleChange = (event) => {\r\n        const { name, value } = event.target;\r\n        setFormValues({\r\n            ...formValues,\r\n            [name]: value,\r\n        });\r\n    };\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n\r\n        const { usuario, email, senha, confirmarSenha } = formValues;\r\n\r\n        // Verifica se todos os campos estão preenchidos\r\n        if (!usuario || !email || !senha || !confirmarSenha) {\r\n            setMessage('Todos os campos devem ser preenchidos.');\r\n            return;\r\n        }\r\n\r\n        // Verifica o formato do email\r\n        if (!/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(email)) {\r\n            setMessage('O email deve ser válido.');\r\n            return;\r\n        }\r\n\r\n        // Verifica se as senhas são iguais\r\n        if (senha !== confirmarSenha) {\r\n            setMessage('As senhas não coincidem.');\r\n            return;\r\n        }\r\n\r\n        // Cria um objeto com os dados do formulário\r\n        const formData = new FormData();\r\n        formData.append('usuario', usuario);\r\n        formData.append('email', email);\r\n        formData.append('senha', senha);\r\n        formData.append('confirmarSenha', confirmarSenha);\r\n\r\n        try {\r\n            // Faz a requisição para o PHP\r\n            const response = await fetch('http://localhost/login/api.php', {\r\n                method: 'POST',\r\n                body: formData,\r\n            });\r\n\r\n            // Converte a resposta para JSON\r\n            const result = await response.json();\r\n\r\n            // Se a resposta do PHP indicar um erro, exibe a mensagem\r\n            if (result.error) {\r\n                setMessage(result.message); // Atualiza o estado com a mensagem de erro\r\n            } else {\r\n                setMessage('Cadastro realizado com sucesso!');\r\n                // Limpa os campos do formulário\r\n                setFormValues({\r\n                    usuario: '',\r\n                    email: '',\r\n                    senha: '',\r\n                    confirmarSenha: ''\r\n                });\r\n                // Navega para a página de login\r\n                setTimeout(() => navigate('/entrar'), 2000); // Redireciona após 2 segundos para permitir a visualização da mensagem\r\n            }\r\n        } catch (error) {\r\n            setMessage('Ocorreu um erro ao enviar o formulário.');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            <h1>Cadastrar</h1>\r\n            <form onSubmit={handleSubmit}>\r\n                <Input\r\n                    name=\"usuario\"\r\n                    type=\"text\"\r\n                    placeholder=\"Usuário\"\r\n                    onChange={handleChange}\r\n                    value={formValues.usuario}\r\n                />\r\n                <Input\r\n                    name=\"email\"\r\n                    type=\"text\"\r\n                    placeholder=\"Email\"\r\n                    onChange={handleChange}\r\n                    value={formValues.email}\r\n                />\r\n                <Input\r\n                    name=\"senha\"\r\n                    type=\"password\"\r\n                    placeholder=\"Senha\"\r\n                    onChange={handleChange}\r\n                    value={formValues.senha}\r\n                />\r\n                <Input\r\n                    name=\"confirmarSenha\"\r\n                    type=\"password\"\r\n                    placeholder=\"Confirmar senha\"\r\n                    onChange={handleChange}\r\n                    value={formValues.confirmarSenha}\r\n                />\r\n                <button type=\"submit\">Cadastrar</button>\r\n                {message && <div className={styles.message}>{message}</div>} {/* Exibe a mensagem de status */}\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,MAAM,MAAM,+BAA+B;AAClD,OAAOC,KAAK,MAAM,SAAS;AAC3B,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,eAAe,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAC/B,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGT,QAAQ,CAAC;IACzCU,OAAO,EAAE,EAAE;IACXC,KAAK,EAAE,EAAE;IACTC,KAAK,EAAE,EAAE;IACTC,cAAc,EAAE;EACpB,CAAC,CAAC;EAEF,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAMgB,QAAQ,GAAGb,WAAW,CAAC,CAAC;;EAE9B;EACA,MAAMc,YAAY,GAAIC,KAAK,IAAK;IAC5B,MAAM;MAAEC,IAAI;MAAEC;IAAM,CAAC,GAAGF,KAAK,CAACG,MAAM;IACpCZ,aAAa,CAAC;MACV,GAAGD,UAAU;MACb,CAACW,IAAI,GAAGC;IACZ,CAAC,CAAC;EACN,CAAC;EAED,MAAME,YAAY,GAAG,MAAOJ,KAAK,IAAK;IAClCA,KAAK,CAACK,cAAc,CAAC,CAAC;IAEtB,MAAM;MAAEb,OAAO;MAAEC,KAAK;MAAEC,KAAK;MAAEC;IAAe,CAAC,GAAGL,UAAU;;IAE5D;IACA,IAAI,CAACE,OAAO,IAAI,CAACC,KAAK,IAAI,CAACC,KAAK,IAAI,CAACC,cAAc,EAAE;MACjDE,UAAU,CAAC,wCAAwC,CAAC;MACpD;IACJ;;IAEA;IACA,IAAI,CAAC,4BAA4B,CAACS,IAAI,CAACb,KAAK,CAAC,EAAE;MAC3CI,UAAU,CAAC,0BAA0B,CAAC;MACtC;IACJ;;IAEA;IACA,IAAIH,KAAK,KAAKC,cAAc,EAAE;MAC1BE,UAAU,CAAC,0BAA0B,CAAC;MACtC;IACJ;;IAEA;IACA,MAAMU,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,SAAS,EAAEjB,OAAO,CAAC;IACnCe,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAEhB,KAAK,CAAC;IAC/Bc,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAEf,KAAK,CAAC;IAC/Ba,QAAQ,CAACE,MAAM,CAAC,gBAAgB,EAAEd,cAAc,CAAC;IAEjD,IAAI;MACA;MACA,MAAMe,QAAQ,GAAG,MAAMC,KAAK,CAAC,gCAAgC,EAAE;QAC3DC,MAAM,EAAE,MAAM;QACdC,IAAI,EAAEN;MACV,CAAC,CAAC;;MAEF;MACA,MAAMO,MAAM,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;;MAEpC;MACA,IAAID,MAAM,CAACE,KAAK,EAAE;QACdnB,UAAU,CAACiB,MAAM,CAAClB,OAAO,CAAC,CAAC,CAAC;MAChC,CAAC,MAAM;QACHC,UAAU,CAAC,iCAAiC,CAAC;QAC7C;QACAN,aAAa,CAAC;UACVC,OAAO,EAAE,EAAE;UACXC,KAAK,EAAE,EAAE;UACTC,KAAK,EAAE,EAAE;UACTC,cAAc,EAAE;QACpB,CAAC,CAAC;QACF;QACAsB,UAAU,CAAC,MAAMnB,QAAQ,CAAC,SAAS,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;MACjD;IACJ,CAAC,CAAC,OAAOkB,KAAK,EAAE;MACZnB,UAAU,CAAC,yCAAyC,CAAC;IACzD;EACJ,CAAC;EAED,oBACIV,OAAA;IAAK+B,SAAS,EAAEnC,MAAM,CAACoC,SAAU;IAAAC,QAAA,gBAC7BjC,OAAA;MAAAiC,QAAA,EAAI;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClBrC,OAAA;MAAMsC,QAAQ,EAAErB,YAAa;MAAAgB,QAAA,gBACzBjC,OAAA,CAACH,KAAK;QACFiB,IAAI,EAAC,SAAS;QACdyB,IAAI,EAAC,MAAM;QACXC,WAAW,EAAC,YAAS;QACrBC,QAAQ,EAAE7B,YAAa;QACvBG,KAAK,EAAEZ,UAAU,CAACE;MAAQ;QAAA6B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7B,CAAC,eACFrC,OAAA,CAACH,KAAK;QACFiB,IAAI,EAAC,OAAO;QACZyB,IAAI,EAAC,MAAM;QACXC,WAAW,EAAC,OAAO;QACnBC,QAAQ,EAAE7B,YAAa;QACvBG,KAAK,EAAEZ,UAAU,CAACG;MAAM;QAAA4B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3B,CAAC,eACFrC,OAAA,CAACH,KAAK;QACFiB,IAAI,EAAC,OAAO;QACZyB,IAAI,EAAC,UAAU;QACfC,WAAW,EAAC,OAAO;QACnBC,QAAQ,EAAE7B,YAAa;QACvBG,KAAK,EAAEZ,UAAU,CAACI;MAAM;QAAA2B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3B,CAAC,eACFrC,OAAA,CAACH,KAAK;QACFiB,IAAI,EAAC,gBAAgB;QACrByB,IAAI,EAAC,UAAU;QACfC,WAAW,EAAC,iBAAiB;QAC7BC,QAAQ,EAAE7B,YAAa;QACvBG,KAAK,EAAEZ,UAAU,CAACK;MAAe;QAAA0B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpC,CAAC,eACFrC,OAAA;QAAQuC,IAAI,EAAC,QAAQ;QAAAN,QAAA,EAAC;MAAS;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,EACvC5B,OAAO,iBAAIT,OAAA;QAAK+B,SAAS,EAAEnC,MAAM,CAACa,OAAQ;QAAAwB,QAAA,EAAExB;MAAO;QAAAyB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,EAAC,GAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3D,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEd;AAACnC,EAAA,CArHuBD,QAAQ;EAAA,QASXH,WAAW;AAAA;AAAA4C,EAAA,GATRzC,QAAQ;AAAA,IAAAyC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}